@model IEnumerable<MakiYumpuSAC.Models.Material>

@{
    ViewData["Title"] = "Materiales Inactivos";
}

<div class="d-flex justify-content-between align-items-center">
    <h4>Materiales Inactivos</h4>
    <a class="btn btn-outline-danger" asp-action="Index">Volver</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Material Base
            </th>
            <th>
                ID Pantone
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hebras)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.IdMaterialBaseNavigation.CodigoMaterial) -
                    @Html.DisplayFor(modelItem => item.IdMaterialBaseNavigation.DescMaterial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdPantone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hebras)
                </td>
                <td>
                    <form asp-action="Inactivos">
                        <input type="hidden" name="id" value="@item.IdMaterial" />
                        <input class="btn btn-outline-success" type="submit" value="Reactivar" />
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script type="module">
        import toastMessage from '/js/toastMessage.js';

        document.addEventListener("DOMContentLoaded", function () {
            const doneMessage = "@ViewBag.DoneMessage";
            const errorMessage = "@ViewBag.ErrorMessage";

            doneMessage && toastMessage(doneMessage, "success");
            errorMessage && toastMessage(errorMessage, "error");
        });
    </script>
}